/******************************************************************************/
//	ストップウォッチ
//		ソースファイル
/******************************************************************************/

//----------------------------------------------------------------------------//
//	インクルード
//----------------------------------------------------------------------------//
#include	"./StopWatch.h"



/******************************************************************************/
//	名前	：	コンストラクタ
//	説明	：	なし
//	戻り値	：	なし
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
CStopWatch::CStopWatch()
: m_Start(NULL), m_End(NULL)
{
}

/******************************************************************************/
//	名前	：	デストラクタ
//	説明	：	なし
//	戻り値	：	なし
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
CStopWatch::~CStopWatch()
{
}

/******************************************************************************/
//	名前	：	リセット
//	説明	：	初期化を行う
//	戻り値	：	なし
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
void	CStopWatch::Reset( void )
{
	m_Start = NULL;
	m_End = NULL;
}

/******************************************************************************/
//	名前	：	スタート
//	説明	：	計測を開始する
//	戻り値	：	なし
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
void	CStopWatch::Start( void )
{
	m_Start = clock();
}

/******************************************************************************/
//	名前	：	ストップ
//	説明	：	計測を停止する
//	戻り値	：	なし
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
void	CStopWatch::Stop( void )
{
	m_End = clock();
}

/******************************************************************************/
//	名前	：	計測結果取得
//	説明	：	計測結果を取得する
//	戻り値	：	double	計測結果（ミリ秒）
//	引数	：	なし
//	備考	：	なし
/******************************************************************************/
double CStopWatch::GetElapsed( void )
{
	return ( (m_End-m_Start)/CLOCKS_PER_SEC );
}
